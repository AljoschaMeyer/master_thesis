% !TEX root = main.tex
\ProvidesPackage{macros}





\newcommand{\defined}[1]{\textit{#1}}


\RequirePackage{mathtools}
\RequirePackage{dsfont}
\newcommand{\defeq}{\vcentcolon=}
\newcommand{\eqdef}{=\vcentcolon}

\newcommand{\complexity}[1]{\mathcal{O}(#1)}

\DeclareMathAlphabet{\mymathbb}{U}{bbold}{m}{n}
\newcommand{\neutraladd}[0]{\mymathbb{0}}

\newcommand{\groupaddsym}[0]{\oplus}
\newcommand{\biggroupadd}[0]{\bigoplus}
\newcommand{\groupadd}[2]{{#1} \groupaddsym {#2}}
\newcommand{\groupsubtract}[2]{{#1} \ominus {#2}}
\newcommand{\inverseadd}[1]{-{#1}}

\newcommand{\concatenate}[0]{\cdot}
\newcommand{\abs}[1]{|{#1}|}

\newcommand{\fun}[3]{{#1}: {#2} \rightarrow {#3}}
\newcommand{\partialfun}[3]{{#1}: {#2} \rightharpoonup{#3}}
\DeclareMathOperator{\domain}{dom}
\DeclareMathOperator{\codomain}{codom}
\newcommand{\set}[1]{\{#1\}}
\newcommand{\disjointunion}[2]{{#1} \dot{\cup} {#2}}
\newcommand{\powerset}[1]{\mathcal{P}({#1})}

\DeclareMathOperator{\lbl}{label}

\newcommand{\N}[0]{\mathds{N}}
\newcommand{\Z}[0]{\mathds{Z}}

\newcommand{\nil}[0]{\mathtt{Nothing}}



\usepackage{environ}
\makeatletter
\newsavebox{\measure@tikzpicture}
\NewEnviron{scaletikzpicturetowidth}[1]{%
  \def\tikz@width{#1}%
  \def\tikzscale{1}\begin{lrbox}{\measure@tikzpicture}%
  \BODY
  \end{lrbox}%
  \pgfmathparse{#1/\wd\measure@tikzpicture}%
  \edef\tikzscale{\pgfmathresult}%
  \BODY
}
\makeatother




% from https://blag.nullteilerfrei.de/2013/03/07/nested-case-distinctions-in-latex/
\usepackage{enumitem}
\usepackage[amsthm,thmmarks]{ntheorem}
%\usepackage{cleveref}
\usepackage{forloop}

\theoremstyle{plain}
\newtheorem{thm}{Theorem}

% At this point we create the environment for nested case distinctions.
% Note that it is used like an enumerate environment, and you can nest
% at most 10 layers deep. Of course, you could change that.
% We will later define a macro \case which will be the equivalent of
% \item, except that we can pass it an optional argument which, instead
% of replacing the number label, adds a comment in brackets.

\newlist{caselist}{enumerate}{10}
\setlist[caselist]{itemsep=1ex,topsep=1ex,parsep=0pt,leftmargin=0pt,%
 labelwidth=*,labelsep=1ex,align=caselabel,label*=.\arabic*}
\setlist[caselist,1]{label=\arabic*}

% The macro \thecaselabeltext serves as the optional parameter that we 
% can later pass to the \case macro.

\newcommand\thecaselabeltext{}
\SetLabelAlign{caselabel}{\textbf{Case~#1\thecaselabeltext.}\hfil}

% The following sets the cleveref label name of the first layer of cases
% and then loops to alias all the other caselist counters. This way,
% cleveref will display references to nested cases correctly.

\crefname{caselisti}{case}{cases}
\newcounter{i}
\forLoop{1}{10}{i}{\crefalias{caselist\roman{i}}{caselisti}}

% Now I define the \case command. We need a little macro to check whether
% a string is empty. The \case macro will then redefine the \thecaselabeltext
% accordingly.

\makeatletter
\def\ifempty#1{\def\@x{#1}\ifx\@x\@empty}
\makeatother

\newcommand\case[1][]{\renewcommand{\thecaselabeltext}
 {\ifempty{#1}\else~(#1)\fi}\item}


%environments
\theoremstyle{definition}
\newtheorem{definition}{Definition}

\newtheorem{proposition}{Proposition}






% domain specific
\DeclareMathOperator{\enc}{enc}
\DeclareMathOperator{\h}{h}
\DeclareMathOperator{\f}{f}
\DeclareMathOperator{\g}{g}
\DeclareMathOperator{\m}{m}
\DeclareMathOperator{\p}{p}
\DeclareMathOperator{\V}{V}
\DeclareMathOperator{\xor}{xor}
\DeclareMathOperator{\priority}{priority}

\newcommand{\lift}[2]{\operatorname{lift_{#1}^{#2}}}
\newcommand{\liftlabel}[2]{\operatorname{label_{#1}^{#2}}}
\newcommand{\somewhatmorphism}[0]{set union somewhatmorphism}

\newcommand{\tlabel}[1]{\operatorname{treaplabel_{#1}}}
\newcommand{\sllabel}[1]{\operatorname{skiplabel_{#1}}}
\newcommand{\skipdomain}[0]{\operatorname{domain}}

\newcommand{\interval}[3]{[{#1},{#2})_{#3}}
\newcommand{\intervalx}[3]{({#1},{#2})_{#3}}
\newcommand{\fp}[1]{\operatorname{fp}(#1)}
\newcommand{\fpname}[0]{\operatorname{fp}}
\newcommand{\ifpmanual}[3]{({#1}, {#2}, {#3})}
\newcommand{\ifp}[3]{\ifpmanual{#1}{#2}{\fp{\interval{#1}{#2}{#3}}}}
\newcommand{\iis}[4]{({#1}, {#2}, {#3}, {#4})}
\newcommand{\iisnatural}[4]{({#1}, {#2}, \interval{#1}{#2}{#3}{#4})}
\newcommand{\ifpempty}[2]{({#1}, {#2})}
\newcommand{\ifpsingle}[2]{\ifpmanual{#1}{#2}{\emptyset}}
\newcommand{\ifpcontain}[3]{\ifpmanual{#1}{#2}{\groupadd{\fp{x}}{#3}}}

\newcommand{\successor}[1]{\operatorname{successor({#1})}}